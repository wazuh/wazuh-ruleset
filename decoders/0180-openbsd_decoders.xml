<!--
  -  OpenBSD decoders
  -  Author: Daniel Cid.
  -  Updated by Wazuh, Inc.
  -  Copyright (C) 2015-2019, Wazuh Inc.
  -  Copyright (C) 2009 Trend Micro Inc.
  -  This program is a free software; you can redistribute it and/or modify it under the terms of GPLv2.
-->


<!-- OpenBSD deluser
  -  2014-02-21T10:22:55.134355-05:00 arrakis userdel[23023]: user removed: name=dac
  -  Dec  1 12:43:16 ip-10-0-0-220 userdel[2793]: delete user 'marge'
-->

<decoder name="open-userdel">
  <program_name>userdel</program_name>
  <regex>user removed: name=(\S+)$|delete user '(\S+\w)'</regex>
  <order>srcuser</order>
</decoder>

<!-- OpenBSD groupdel
  - May 28 09:15:43 ix groupdel[25984]: group deleted: name=_dbus
-->
<decoder name="groupdel">
  <program_name>groupdel</program_name>
  <regex>^group deleted: name=(\S+)$</regex>
  <order>extra_data</order>
</decoder>

<!-- OpenBSD isakmpd decoders -->

<decoder name="isakmpd">
  <program_name>^isakmpd</program_name>
</decoder>

<decoder name="isakmpd-from">
  <parent>isakmpd</parent>
  <prematch>message from </prematch>
  <regex>from (\S+) port (\d+)</regex>
  <order>srcip,srcport</order>
</decoder>

<decoder name="isakmpd-peer">
  <parent>isakmpd</parent>
  <prematch>from peer</prematch>
  <regex>from peer (\S+):(\d+)$</regex>
  <order>srcip,srcport</order>
</decoder>

<!-- OpenBSD kernel messages -->
<decoder name="bsd_kernel">
  <program_name>^/bsd</program_name>
</decoder>

<decoder name="bsd_arp">
  <parent>bsd_kernel</parent>
  <prematch offset="after_parent">^arp </prematch>
  <regex offset="after_prematch"> for (\S+) by (\S+) on \S+</regex>
  <order>dstip, extra_data</order>
</decoder>

<!-- OpenBSD mountd decoder
- Apr 11 20:01:02 ix mountd[11618]: Refused mount RPC from host 192.168.17.10 port 45659
-->

<decoder name="mountd">
  <program_name>^mountd</program_name>
</decoder>

<decoder name="mountd-host">
  <parent>mountd</parent>
  <prematch>from host </prematch>
  <regex offset="after_prematch">(\S+) port \d+$</regex>
  <order>srcip</order>
</decoder>

<!-- OpenBSD pf decoder (as a plugin - compiled).
  - Will extract the action,srcip,dstip,protocol,srcport,dstport
  - Examples:
  - Mar 30 15:33:26 enigma pf: Mar 30 15:32:33.483712 rule 2/(match) pass in on xl0: 140.211.166.3.6667 > 192.168.2.10.16290: P 7408:7677(269) ack 1773 win 2520 <nop,nop,timestamp 3960674784 2860123562> (DF)
  - Mar 30 15:47:05.522341 rule 4/(match) block in on lo0: 127.0.0.1.48784 > 127.0.0.1.23: S 1381529123:1381529123(0) win 16384 <mss 33184,nop,nop,sackOK,nop,wscale 0,[|tcp]> (DF) [tos 0x10]
  - Mar 30 15:54:22.171929 rule 3/(match) pass out on xl0: 192.168.2.10.1514 > 192.168.2.190.1030:  udp 73
  - Mar 30 15:54:22.174412 rule 3/(match) pass out on xl0: 192.168.2.10.1514 > 192.168.2.190.1030:  udp 89

  -->
<decoder name="pf">
   <type>firewall</type>
   <program_name>^pf$</program_name>
   <plugin_decoder>PF_Decoder</plugin_decoder>
</decoder>

<!-- OpenBSD smtpd decoders -->

<decoder name="smtpd">
  <program_name>^smtpd</program_name>
</decoder>

<decoder name="smtpd-client">
  <parent>smtpd</parent>
  <prematch offset="after_parent">^client</prematch>
  <regex>^client (\S+) </regex>
  <order>srcip</order>
</decoder>

<decoder name="smtpd-relay">
  <parent>smtpd</parent>
  <prematch>relay=</prematch>
  <regex>relay=\S+ [(\S+)], </regex>
  <order>srcip</order>
</decoder>

<decoder name="smtpd-in">
  <parent>smtpd</parent>
  <prematch offset="after_parent">^smtp-in: </prematch>
  <regex offset="after_prematch">^(\S+) </regex>
  <order>status</order>
</decoder>

<decoder name="smtpd-in">
  <parent>smtpd</parent>
  <regex> => (\d+) </regex>
  <order>action</order>
</decoder>

<!-- OpenBSD doas -->
<decoder name="doas">
  <program_name>^doas</program_name>
</decoder>

<decoder name="doas-user">
  <parent>doas</parent>
  <regex>^(\S+) ran| for (\S+):</regex>
  <order>srcuser</order>
</decoder>

<decoder name="doas-user">
  <parent>doas</parent>
  <regex offset="after_parent"> as (\S+): </regex>
  <order>dstuser</order>
</decoder>
